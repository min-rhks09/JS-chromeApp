1209 바닐라.js
- 모멘텀 클론코딩
    - 로그인, 시계, 위치, 날씨, 로그인유지(세션), 무작위 명언, 무작위 배경화면, todolist 등

- 시작
 - 크로미움 기반 브라우저에서 개발자도구(또는 검사)를 통해 console에 접근할 수 있음(간단한 코드작성시 유용) 
 - html은 css,js파일을 가져와서 브라우저에서 열도록 도와준다


#2.0
console 창에서 실행(js코드 수정가능)
html에서 불러와서 실행(css, js 등)

#2.1
기본적 데이터 타입
number: integer float 등 
text: text  string 등 

#2.2
js 파일에서 console.log(출력내용)로 출력
변수(variable)
 - const를 사용 하여 변수를 지정할 수 있음
 - 변수는 camelCase 형식으로 작성
 - 재할당, 재선언 불가

#2.3
또 다른 변수 지정법
let
 - const와의 차이점: const는 상수(값 변화 불가)
 - 같은 변수 명에서 let을 주지 않고 변수 명만 입력하여 변경가능
    ex) let a = 1 ------> a = 2 와 같은 코드 작성 가능
    js 파일은 위에서부터 읽어 내려가느 특징을 이용 한 것
 - const: 계속 준다, let: 한 번만 준다
 - 재선언 불가 , 재할당 가능

var
 - 옛날에 사용하던 변수 지정 방식
 - 재선언, 재할당 가능 
 - 실수로 값을  재선언 시 오류를 발견하기 힘듦

#2.4
- boolean: true or false 
- null: 값이 없음
- undefined: 값이 정의되지 않음

#2.5
array
 - 기본적인 데이터 구조
 ex) 요일을 그룹화하기 []를 사용
    const week = ["mon", "tue", "wed", "thu", "fri", "sat"];
    (= 리스트)

 - array에서 원하는 값 찾기
 ex)week array에서 monday 찾기 -> console.log(week[0]); -> []안의 값은 키값(키값은 0번째 부터 존재)

 -array에 새로운 값 추가
    -push 사용
    ex)week array에 "sun" 추가 -> week.push("sun");

#2.6
object(property를 가진 데이터 저장 구조)
 - {}를 사용하여 작성
 ex)player의 정보를 담기
 const player={
     name: "mk",
     age: 26,
     point:100
 }
 - name만 출력 -> console.log(player.name); or console.log(player["name"])
 - point 변경 -> const player 아래 player.point = 200;
    -object안의 값을 변경하는 거라 const 안에서 에러없이 작동
 ex)object안에 값 추가, lastName 추가하기
    player.lastName = "park";

#2.7 ~ #2.8
function
(): 함수의 실행버튼과 같은 역할 
ex) 이름 앞에 Hello를 붙여주는 함수를 작성하라, 뒤에는 나이 표시
    function sayHello(nameOfPerson, age){
        console.log(" hello " + nameOfPerson + " and your age is " + age);
    }
    sayHello("mk", "26");

ex) player object 작성 후 출력해보기
    const player={
        name: "mk", 
        sayHello: function(otherPersonName){
            console.log("Hello" + otherPersonName)
        },
    };
    player.sayHello("min");

#2.9
- string: "" or ''
- number: integer, float 
- const, let, var(사용 지양)
- array: []

    

